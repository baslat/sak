% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concord_geos.R
\name{get_geos}
\alias{get_geos}
\title{Get geographical data from GitHub}
\usage{
get_geos(cols = NULL)
}
\arguments{
\item{cols}{(unquoted character vector; default = \code{NULL}) the columns to
select. They mostly follow the pattern of \code{geo_name_year} or
\code{geo_code_year}, but see details for a full list. If \code{NULL} all
available columns are returned.}
}
\value{
a \code{tibble} with as the columns you asked for the as many rows as
needed to fulfil that request (i.e. up to 358,122 rows). Note that
\code{dplyr::distinct()} is called before returning the results (to
minimise redundant results).
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
This function queries my personal GitHub and returns concorded geographic
data. It is used to concord geographies in \code{concord_geos}, and can be
used to get basic meshblock information like category or population estimate.
}
\details{
Available columns include ASGS, LGA, UCL, SUA, GCCSA, RA, CED and SED, and
more:
\itemize{
\item mb_code_2016
\item mb_category_name_2016
\item sa1_maincode_2016
\item sa1_7digitcode_2016
\item sa2_maincode_2016
\item sa2_5digitcode_2016
\item sa2_name_2016
\item sa3_code_2016
\item sa3_name_2016
\item sa4_code_2016
\item sa4_name_2016
\item gccsa_code_2016
\item gccsa_name_2016
\item state_code_2016
\item state_name_2016
\item ucl_code_2016
\item ucl_name_2016
\item sosr_code_2016
\item sosr_name_2016
\item sos_code_2016
\item sos_name_2016
\item sua_code_2016
\item sua_name_2016
\item lga_code_2018
\item lga_name_2018
\item poa_code_2016
\item ced_code_2018
\item ced_name_2018
\item sed_code_2020
\item sed_name_2020
\item ra_code_2016
\item ra_name_2016
\item area_albers_sqkm
\item dwellings
\item persons
}
}
\examples{
\dontrun{

get_geos(cols = c(
  mb_category_name_2016,
  area_albers_sqkm,
  ced_name_2018,
  persons
))
}

}
