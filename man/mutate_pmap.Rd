% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_pmap.r
\name{mutate_pmap}
\alias{mutate_pmap}
\title{Use \code{pmap} to create a new column in a \code{data.frame}}
\usage{
mutate_pmap(.data, col_name, .f, ...)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{col_name}{(unquoted character) the name of the new column you want to
add}

\item{.f}{A function, formula, or vector (not necessarily atomic).

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function. There
are three ways to refer to the arguments:
\itemize{
\item For a single argument function, use \code{.}
\item For a two argument function, use \code{.x} and \code{.y}
\item For more arguments, use \code{..1}, \code{..2}, \code{..3} etc
}

This syntax allows you to create very compact anonymous functions.

If \strong{character vector}, \strong{numeric vector}, or \strong{list}, it is
converted to an extractor function. Character vectors index by
name and numeric vectors index by position; use a list to index
by position and name at different levels. If a component is not
present, the value of \code{.default} will be returned.}

\item{...}{Additional arguments passed on to the mapped function.}
}
\value{
\code{.data} with a new column named after \code{col_name}.
}
\description{
Sometimes you want to use \code{mutate} to create a new column in a
data.frame, but that function doesn't work with vectors. One workaround is to
use a \code{rowwise() \%>\% mutate()}, however that is quite slow. This
function lets you use the speed of \code{pmap} in a \code{mutate}-like syntax
(and returns the original data.frame with a new column, instead of just a
list). This works best if the column names of \code{.data} match the
arguments expected by \code{.f}.
}
\examples{
\dontrun{

# Create a column of charts
tibble::tibble(mtcars = list(
    mtcars,
    mtcars
)) \%>\%
    mutate_pmap(
        col_name = plot,
        .f = chart_mtcars()
    )
}
}
