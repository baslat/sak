% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_well.r
\name{run_well}
\alias{run_well}
\title{A wrapper to run system commands well}
\usage{
run_well(
  command,
  args = character(),
  split_args = TRUE,
  capture_error = FALSE,
  ...
)
}
\arguments{
\item{command}{Character scalar, the command to run. If you are
running \code{.bat} or \code{.cmd} files on Windows, make sure you read the
'Batch files' section in the \link[processx]{process} manual page.}

\item{args}{Character vector, arguments to the command.}

\item{split_args}{(logical; default  = \code{TRUE}) split the \code{args} string into a
vector on spaces (because that's how \code{processx::run} expects it)?}

\item{capture_error}{(logical; default = \code{FALSE}) return \code{stderr} as a
character vector?}

\item{...}{other arguments passed to \verb{\link{[processx]{run}}}.}
}
\value{
a character vector of \code{stdout}
}
\description{
This function is a wrapper for \verb{\link{[processx]{run}}}, with opinionated error
handling. It will return the result of \code{stdin} if possible, and give errors
about timeouts and \code{stderr} otherwise.
}
\examples{
\dontrun{
# Where is R (hopefully on your path)?
run_well("where.exe", "R")

# Where is are (hopefully nowhere)?
run_well("where.exe", "are")
}
}
